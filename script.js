const createSnowflake = () => {
    const snowflake = document.createElement('div');
    snowflake.classList.add('snowflake');
    snowflake.textContent = '‚ùÑ';
    snowflake.style.left = Math.random() * window.innerWidth + 'px';
    snowflake.style.fontSize = Math.random() * 10 + 10 + 'px';
    snowflake.style.animationDuration = Math.random() * 3 + 2 + 's';

    document.body.appendChild(snowflake);

    setTimeout(() => {
        snowflake.remove();
    }, 4000);
};

setInterval(createSnowflake, 100);

document.addEventListener("DOMContentLoaded", () => {
    console.log("Phone interface loaded!");
  });
  
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞
const newYearDate = new Date('December 31, 2024 23:59:59').getTime();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
function updateCountdown() {
    const now = new Date().getTime();
    const timeLeft = newYearDate - now;

    // –†–∞—Å—á—ë—Ç –¥–Ω–µ–π, —á–∞—Å–æ–≤, –º–∏–Ω—É—Ç –∏ —Å–µ–∫—É–Ω–¥
    const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
    const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    document.getElementById('days').innerText = days;
    document.getElementById('hours').innerText = hours;
    document.getElementById('minutes').innerText = minutes;
    document.getElementById('seconds').innerText = seconds;

    // –ï—Å–ª–∏ –¥–∞—Ç–∞ –ø—Ä–æ—à–ª–∞, –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å—á—ë—Ç
    if (timeLeft < 0) {
        clearInterval(countdownInterval);
        document.querySelector('.countdown').innerHTML = '<h2>Happy New Year! üéâ</h2>';
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
const countdownInterval = setInterval(updateCountdown, 1000);

// 1
const ideas = [
    "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —Ñ–∏–ª—å–º. üé•",
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–µ—á—å –∏–º–±–∏—Ä–Ω—ã–µ –ø—Ä—è–Ω–∏–∫–∏. üç™",
    "–£–∫—Ä–∞—Å—å—Ç–µ –æ–∫–Ω–∞ —Å–Ω–µ–∂–∏–Ω–∫–∞–º–∏ –∏–∑ –±—É–º–∞–≥–∏. ‚ùÑÔ∏è",
    "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –≤–µ—á–µ—Ä –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä —Å –¥—Ä—É–∑—å—è–º–∏. üåü",
    "–°–æ–∑–¥–∞–π—Ç–µ –≥–∏—Ä–ª—è–Ω–¥—É –∏–∑ –ª–∞–º–ø–æ—á–µ–∫ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏. üéÑ"

];

document.getElementById("generate-idea").addEventListener("click", () => {
    const randomIdea = ideas[Math.floor(Math.random() * ideas.length)];
    document.getElementById("idea-output").textContent = randomIdea;
});

//2
const decorations = document.querySelectorAll('.decoration');

decorations.forEach(decoration => {
    decoration.addEventListener('dragstart', dragStart);
    decoration.addEventListener('dragend', dragEnd);
});

function dragStart(e) {
    e.dataTransfer.setData('text/plain', e.target.id);
}

function dragEnd(e) {
    const tree = document.getElementById('tree-container');
    const rect = tree.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;

    e.target.style.position = 'absolute';
    e.target.style.left = `${x - 25}px`;
    e.target.style.top = `${y - 25}px`;
}

//3 

const addImageButton = document.getElementById('add-image');
const imageUpload = document.getElementById('image-upload');
const treeContainer = document.getElementById('interactive-tree-container');

addImageButton.addEventListener('click', () => {
    imageUpload.click();
});

imageUpload.addEventListener('change', (event) => {
    const file = event.target.files[0];
    if (file) {
        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.classList.add('uploaded-decoration');
        img.style.width = '50px';
        img.style.height = '50px';
        img.style.position = 'absolute';
        img.style.top = '50%';
        img.style.left = '50%';
        img.style.transform = 'translate(-50%, -50%)';
        img.draggable = true;

        treeContainer.appendChild(img);
    }
});
